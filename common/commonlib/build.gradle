apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def config  = rootProject.ext.config
def google  = rootProject.ext.google
def test    = rootProject.ext.test
def common  = rootProject.ext.common
def rare    = rootProject.ext.rare

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation test.junit
    androidTestImplementation test.runner
    androidTestImplementation test.espresso

    implementation google.appcompat
    implementation google.kotlin_stdlib_jdk7
    implementation google.core_ktx
    implementation google.kotlin_stdlib
    implementation google.constraintlayout

    implementation common.arouter
    annotationProcessor common.arouter_compiler

    implementation project(":common:arms")

}
